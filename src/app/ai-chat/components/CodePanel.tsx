'use client';

import React, { useState } from 'react';

interface CodePanelProps {
  code: string;
  isOpen: boolean;
  onClose: () => void;
  onClear?: () => void;
}

export default function CodePanel({ code, isOpen, onClose, onClear }: CodePanelProps) {
  const [copySuccess, setCopySuccess] = useState(false);

  // Copy code to clipboard
  const handleCopyCode = async () => {
    try {
      await navigator.clipboard.writeText(code);
      setCopySuccess(true);
      setTimeout(() => setCopySuccess(false), 2000);
    } catch (err) {
      console.error('Failed to copy code:', err);
    }
  };

  // Download code as text file
  const handleDownloadTxt = () => {
    const blob = new Blob([code], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `pine-script-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  // Download code as PDF
  const handleDownloadPdf = () => {
    // Create a simple HTML content for PDF
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <title>Pine Script Code - Pine Genie</title>
        <style>
          body { 
            font-family: 'Courier New', monospace; 
            margin: 20px; 
            line-height: 1.4;
          }
          .header { 
            text-align: center; 
            margin-bottom: 20px; 
            border-bottom: 2px solid #1f6feb;
            padding-bottom: 10px;
          }
          .code { 
            background: #f6f8fa; 
            padding: 15px; 
            border-radius: 6px; 
            white-space: pre-wrap;
            border: 1px solid #d0d7de;
          }
          .footer {
            margin-top: 20px;
            text-align: center;
            font-size: 12px;
            color: #666;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>Pine Script Code</h1>
          <p>Generated by Pine Genie AI - ${new Date().toLocaleDateString()}</p>
        </div>
        <div class="code">${code}</div>
        <div class="footer">
          <p>Visit https://pinegenie.com for more Pine Script tools</p>
        </div>
      </body>
      </html>
    `;

    const blob = new Blob([htmlContent], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `pine-script-${Date.now()}.html`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <aside className={`claude-code-panel ${isOpen ? 'open' : ''}`} data-testid="claude-code-panel">
      <div className="code-panel-content">
        <div className="code-panel-header">
          <h3>Pine Script Code</h3>
          <div className="code-panel-actions">
            <button
              className="code-action-btn copy-btn"
              onClick={handleCopyCode}
              title="Copy code"
              data-testid="copy-code-btn"
            >
              {copySuccess ? (
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                  <polyline points="20,6 9,17 4,12" />
                </svg>
              ) : (
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                  <rect x="9" y="9" width="13" height="13" rx="2" ry="2" />
                  <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1" />
                </svg>
              )}
            </button>
            
            <button
              className="code-action-btn download-txt-btn"
              onClick={handleDownloadTxt}
              title="Download as TXT"
              data-testid="download-txt-btn"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                <polyline points="14,2 14,8 20,8" />
                <line x1="16" y1="13" x2="8" y2="13" />
                <line x1="16" y1="17" x2="8" y2="17" />
                <polyline points="10,9 9,9 8,9" />
              </svg>
            </button>

            <button
              className="code-action-btn download-pdf-btn"
              onClick={handleDownloadPdf}
              title="Download as HTML/PDF"
              data-testid="download-pdf-btn"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                <polyline points="7,10 12,15 17,10" />
                <line x1="12" y1="15" x2="12" y2="3" />
              </svg>
            </button>

            <button
              className="code-action-btn clear-btn"
              onClick={onClear}
              title="Clear code"
              data-testid="clear-code-btn"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <polyline points="3,6 5,6 21,6" />
                <path d="M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2V6" />
              </svg>
            </button>

            <button
              className="close-panel-btn"
              onClick={onClose}
              title="Close code panel"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <line x1="18" y1="6" x2="6" y2="18" />
                <line x1="6" y1="6" x2="18" y2="18" />
              </svg>
            </button>
          </div>
        </div>
        
        <div className="code-content">
          {code ? (
            <div className="code-editor">
              <pre className="code-block">
                <code>{code}</code>
              </pre>
            </div>
          ) : (
            <div className="code-placeholder" style={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: 'center',
              height: '100%',
              padding: '2rem',
              textAlign: 'center',
              background: '#0d1117',
              border: 'none',
              borderRadius: '0',
              margin: '0'
            }}>
              <div className="placeholder-icon" style={{
                marginBottom: '1.5rem',
                opacity: 0.7,
                color: '#1f6feb'
              }}>
                <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
                  <polyline points="16,18 22,12 16,6" />
                  <polyline points="8,6 2,12 8,18" />
                </svg>
              </div>
              <h4 style={{
                margin: '0 0 1rem 0',
                fontSize: '1.25rem',
                fontWeight: 600,
                background: 'linear-gradient(45deg, #1f6feb, #388bfd)',
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent',
                backgroundClip: 'text'
              }}>Pine Script Code Editor</h4>
              <p style={{
                margin: '0 0 1.5rem 0',
                fontSize: '1rem',
                opacity: 0.8,
                maxWidth: '300px',
                lineHeight: 1.5,
                color: '#8b949e'
              }}>Ask me to generate a Pine Script strategy or indicator to see the code here.</p>
              <div style={{
                display: 'flex',
                gap: '0.5rem',
                flexWrap: 'wrap',
                justifyContent: 'center'
              }}>
                <span style={{
                  padding: '0.25rem 0.75rem',
                  background: 'rgba(31, 111, 235, 0.1)',
                  border: '1px solid rgba(31, 111, 235, 0.3)',
                  borderRadius: '16px',
                  fontSize: '0.75rem',
                  color: '#1f6feb'
                }}>Pine Script v6</span>
                <span style={{
                  padding: '0.25rem 0.75rem',
                  background: 'rgba(0, 212, 170, 0.1)',
                  border: '1px solid rgba(0, 212, 170, 0.3)',
                  borderRadius: '16px',
                  fontSize: '0.75rem',
                  color: '#00d4aa'
                }}>Auto-format</span>
                <span style={{
                  padding: '0.25rem 0.75rem',
                  background: 'rgba(255, 184, 0, 0.1)',
                  border: '1px solid rgba(255, 184, 0, 0.3)',
                  borderRadius: '16px',
                  fontSize: '0.75rem',
                  color: '#ffb800'
                }}>Syntax highlight</span>
              </div>
            </div>
          )}
        </div>

        {copySuccess && (
          <div className="copy-success-toast">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
              <polyline points="20,6 9,17 4,12" />
            </svg>
            Code copied to clipboard!
          </div>
        )}
      </div>
    </aside>
  );
}